syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

import "Protobuf/base/acs12.proto";

option csharp_namespace = "TomorrowDAO.Contracts.DAO";

service DAOContract {
  option (aelf.csharp_state) = "TomorrowDAO.Contracts.DAO.DAOContractState";
  option (aelf.base) = "Protobuf/base/acs12.proto";

  rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {}
  rpc CreateDAO (CreateDAOInput) returns (google.protobuf.Empty) {}
  rpc SetSubsistStatus (SetSubsistStatusInput) returns (google.protobuf.Empty) {}
  rpc GetDAOInfo (aelf.Hash) returns (DAOInfo) {option (aelf.is_view) = true;}
  rpc GetDAOIdByName (google.protobuf.StringValue) returns (aelf.Hash) {option (aelf.is_view) = true;}
  rpc GetMetadata (aelf.Hash) returns (Metadata) {option (aelf.is_view) = true;}
  rpc GetSubsistStatus (aelf.Hash) returns (google.protobuf.BoolValue) {option (aelf.is_view) = true;}
  rpc GetGovernanceToken (aelf.Hash) returns (google.protobuf.StringValue) {option (aelf.is_view) = true;}

  // high council
  rpc EnableHighCouncil (EnableHighCouncilInput) returns (google.protobuf.Empty) {}
  rpc DisableHighCouncil (aelf.Hash) returns (google.protobuf.Empty) {}
  rpc SetHighCouncilExecutionConfig (SetHighCouncilExecutionConfigInput) returns (google.protobuf.Empty) {}
  rpc GetHighCouncilStatus (aelf.Hash) returns (google.protobuf.BoolValue) {option (aelf.is_view) = true;}
  rpc GetHighCouncilExecutionConfig (aelf.Hash) returns (google.protobuf.BoolValue) {option (aelf.is_view) = true;}
  rpc GetHighCouncilAddress (aelf.Hash) returns (aelf.Address) {option (aelf.is_view) = true;}

  // file
  rpc UploadFileInfos (UploadFileInfosInput) returns (google.protobuf.Empty) {}
  rpc RemoveFileInfos (RemoveFileInfosInput) returns (google.protobuf.Empty) {}
  rpc GetFileInfos (aelf.Hash) returns (FileInfoList) {option (aelf.is_view) = true;}

  // permission
  rpc SetPermissions (SetPermissionsInput) returns (google.protobuf.Empty) {}
  rpc HasPermission (HasPermissionInput) returns (google.protobuf.BoolValue) {option (aelf.is_view) = true;}
}

message InitializeInput {
  aelf.Address governance_contract_address = 1;
  aelf.Address vote_contract_address = 2;
  aelf.Address treasury_contract_address = 3;
  aelf.Address election_contract_address = 4;
  aelf.Address timelock_contract_address = 5;
}

message CreateDAOInput {
  Metadata metadata = 1;  // basic info
  string governance_token = 2;  // can be empty
  GovernanceSchemeInput governance_scheme_input = 3;
  HighCouncilInput high_council_input = 4;
  bool is_treasury_contract_needed = 5;  // if true, create treasury
  repeated File files = 6;
  repeated PermissionInfo permission_infos = 7;
}

message GovernanceSchemeInput {
  aelf.Hash governance_scheme_id = 1;  // if new Hash() means governance scheme si not fixed
  GovernanceSchemeThreshold governance_scheme_threshold = 2;  // empty if governance scheme is not fixed
}

message HighCouncilInput {
  HighCouncilConfig high_council_config = 1;  // empty if high council is not enabled
  bool is_require_high_council_for_execution = 2;
}

message Metadata {
  string name = 1;
  string logo_url = 2;
  string description = 3;                // limit 240
  map<string, string> social_media = 4;  // Twitter, Facebook, Discord, Telegram, Reddit
}

message SocialMediaList {
  repeated string data = 1;
}

message GovernanceSchemeThreshold {// copy from governance contract
  int64 minimal_required_threshold = 1;
  int64 minimal_vote_threshold = 2;
  int64 minimal_approve_threshold = 3;     // percentage
  int64 maximal_rejection_threshold = 4;   // percentage
  int64 maximal_abstention_threshold = 5;  // percentage
}

message HighCouncilConfig {
  int64 max_high_council_member_count = 1;
  int64 max_high_council_candidate_count = 2;
  int64 election_period = 3;
}

message File {
  string cid = 1;   // id
  string name = 2;
  string url = 3;
}

message FileInfo {
  File file = 1;
  google.protobuf.Timestamp upload_time = 2;
  aelf.Address uploader = 3;
}

message FileInfoList {
  map<string, FileInfo> data = 1;  // cid -> FileInfo
}

message MemberList {
  repeated aelf.Address data = 1;
}

message HighCouncilInfo {
  int64 term_number = 1;
  MemberList member_list = 2;
}

enum PermissionType {
  NONE = 0;             // no permission
  EVERYONE = 1;         // everyone
  HIGHCOUNCILONLY = 2;  // HighCouncil member only
  SPECIFICADDRESS = 3;  // specific address
}

message PermissionInfo {
  aelf.Address where = 1;              // target contract address
  string what = 2;                     // target function name
  PermissionType permission_type = 3;  // permission type
  aelf.Address who = 4;                // address who is granted the permission
}

message PermissionInfoList {
  repeated PermissionInfo permission_infos = 1;
}

message DAOInfo {
  aelf.Hash dao_id = 1;
  aelf.Address creator = 2;
  bool subsist_status = 3;
  string governance_token = 4;
  ContractAddressList contract_address_list = 5;
}

message ContractAddressList {
  aelf.Address governance_contract_address = 1;
  aelf.Address vote_contract_address = 2;
  aelf.Address treasury_contract_address = 3;
  aelf.Address election_contract_address = 4;
  aelf.Address timelock_contract_address = 5;
}

message SetSubsistStatusInput {
  aelf.Hash dao_id = 1;
  bool status = 2;
}

message EnableHighCouncilInput {
  aelf.Hash dao_id = 1;
  HighCouncilConfig high_council_config = 2;
  bool execution_config = 3;
}

//message SetHighCouncilConfigInput {
//  aelf.Hash dao_id = 1;
//  int64 max_high_council_member_count = 2;
//  int64 max_high_council_candidate_count = 3;
//  int64 election_period = 4;
//}

message SetHighCouncilExecutionConfigInput {
  aelf.Hash dao_id = 1;
  bool execution_config = 2;  // if true, all proposals must be executed by high council
}

//message UpdateHighCouncilMemberInput {
//  aelf.Hash dao_id = 1;
//  MemberList member_list = 2;
//}
//
//message IsHighCouncilMemberInput {
//  aelf.Hash dao_id = 1;
//  aelf.Address address = 2;
//}

message UploadFileInfosInput {
  aelf.Hash dao_id = 1;
  repeated File files = 2;
}

message RemoveFileInfosInput {
  aelf.Hash dao_id = 1;
  repeated string file_cids = 2;
}

message SetPermissionsInput {
  aelf.Hash dao_id = 1;
  repeated PermissionInfo permission_infos = 2;
}

message HasPermissionInput {
  aelf.Hash dao_id = 1;
  aelf.Address where = 2;  // target contract address
  aelf.Address who = 3;    // address who is granted the permission
  string what = 4;         // target function name
}

// log event
message DAOCreated {
  option (aelf.is_event) = true;
  Metadata metadata = 1;
  string governance_token = 2;
  aelf.Hash dao_id = 3;
  aelf.Address creator = 4;
  ContractAddressList contract_address_list = 5;
}

message SubsistStatusSet {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
  bool status = 2;
}

message HighCouncilEnabled {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
  bool execution_config = 2;
  aelf.Address high_council_address = 3;
}

message HighCouncilDisabled {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
}

message HighCouncilExecutionConfigSet {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
  bool execution_config = 2;
}

//message HighCouncilConfigSet {
//  option (aelf.is_event) = true;
//  aelf.Hash dao_id = 1;
//  HighCouncilConfig high_council_config = 2;
//}
//
//message HighCouncilMemberUpdated {
//  option (aelf.is_event) = true;
//  aelf.Hash dao_id = 1;
//  HighCouncilInfo previous_high_council_info = 2;
//  HighCouncilInfo updated_high_council_info = 3;
//}

message FileInfosUploaded {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
  FileInfoList uploaded_files = 2;
}

message FileInfosRemoved {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
  FileInfoList removed_files = 2;
}

message PermissionsSet {
  option (aelf.is_event) = true;
  aelf.Hash dao_id = 1;
  aelf.Address here = 2;   // address who grants the permission
  PermissionInfoList permission_info_list = 3;
}
